;===
; test 69
(define (equal? x y)
    (if (not (pair? x))
        (eq? x y)
        (and (equal? (car x) (car y))
             (equal? (cdr x) (cdr y)))))
(define fun10 (lambda ()
                 (begin
                   (define f (lambda (a b) (+ a b)))
                   (define g (lambda (f) (f 3 4)))
                   (define t (lambda (a) (
                                         if (equal? a 'mul)
                                             *
                                             (if (equal? a 'plus)
                                                 +
                                                 (if (equal? a 'minus)
                                                     -
                                                     *)))))
                   ((t 'plus) (g f) (g (t 'mul)) (g (t 'minus)) (g (t 'none)))
                   )
                 )
    )
(fun10)	
