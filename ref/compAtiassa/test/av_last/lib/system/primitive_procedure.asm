BIN_PLUS:
  PUSH(FP);
  MOV(FP,SP);
  CMP(FPARG(1),IMM(2));
  JUMP_NE(ARGS_FAULT);
  MOV(R1,FPARG(2));
  MOV(R2,FPARG(3));
  CMP(IND(R1),T_INTEGER);
  JUMP_NE(NOT_INTEGER_ERROR);
  CMP(IND(R2),T_INTEGER);
  JUMP_NE(NOT_INTEGER_ERROR);
  MOV(R1,INDD(R1,1));
  MOV(R2,INDD(R2,1));
  ADD(R1,R2);
  PUSH(R1);
  CALL(MAKE_SOB_INTEGER);
  DROP(1);
  POP(FP);
  RETURN;
  
SET_CAR:
  PUSH(FP);
  MOV(FP,SP);
  CMP(FPARG(1), IMM(2));
  JUMP_NE(ARGS_FAULT);
  MOV(R2,FPARG(2));
  CMP(IND(R2),IMM(T_PAIR));
  JUMP_NE(NOT_PAIR_ERROR);
  MOV(R1,FPARG(3));
  MOV(INDD(R2,1),R1);
  POP(FP);
  RETURN;
  
SET_CDR:
  PUSH(FP);
  MOV(FP,SP);
  CMP(FPARG(1), IMM(2));
  JUMP_NE(ARGS_FAULT);
  MOV(R2,FPARG(2));
  CMP(IND(R2),IMM(T_PAIR));
  JUMP_NE(NOT_PAIR_ERROR);
  MOV(R1,FPARG(3));
  MOV(INDD(R2,2),R1);
  POP(FP);
  RETURN;
  
IS_VECTOR:
  PUSH(FP);
  MOV(FP,SP);
  CMP(FPARG(1) ,IMM(1));
  JUMP_NE(ARGS_FAULT);
  MOV(R2,FPARG(2));
  CMP(IND(R2),IMM(T_VECTOR));
  JUMP_NE(NOT_VECTOR);
  MOV(R0,5);
  JUMP(END_IS_VECTOR);
  NOT_VECTOR:
  MOV(R0,3);
  END_IS_VECTOR:
  POP(FP);
  RETURN;
  
IS_SYMBOL:
  PUSH(FP);
  MOV(FP,SP);
  CMP(FPARG(1) ,IMM(1));
  JUMP_NE(ARGS_FAULT);
  MOV(R2,FPARG(2));
  CMP(IND(R2),IMM(T_SYMBOL));
  JUMP_NE(NOT_SYMBOL);
  MOV(R0,5);
  JUMP(END_IS_SYMBOL);
  NOT_SYMBOL:
  MOV(R0,3);
  END_IS_SYMBOL:
  POP(FP);
  RETURN;
  
IS_STRING:
  PUSH(FP);
  MOV(FP,SP);
  CMP(FPARG(1) ,IMM(1));
  JUMP_NE(ARGS_FAULT);
  MOV(R2,FPARG(2));
  CMP(IND(R2),IMM(T_STRING));
  JUMP_NE(NOT_STRING);
  MOV(R0,5);
  JUMP(END_IS_STRING);
  NOT_STRING:
  MOV(R0,3);
  END_IS_STRING:
  POP(FP);
  RETURN;
  
IS_NUMBER:
  PUSH(FP);
  MOV(FP,SP);
  CMP(FPARG(1) ,IMM(1));
  JUMP_NE(ARGS_FAULT);
  MOV(R2,FPARG(2));
  CMP(IND(R2),IMM(T_INTEGER));
  JUMP_NE(NOT_NUMBER);
  MOV(R0,5);
  JUMP(END_IS_NUMBER);
  NOT_NUMBER:
  MOV(R0,3);
  END_IS_NUMBER:
  POP(FP);
  RETURN;
  
IS_INT:
  PUSH(FP);
  MOV(FP,SP);
  CMP(FPARG(1) ,IMM(1));
  JUMP_NE(ARGS_FAULT);
  MOV(R2,FPARG(2));
  CMP(IND(R2),IMM(T_INTEGER));
  JUMP_NE(NOT_INTEGER);
  MOV(R0,5);
  JUMP(END_IS_INTEGER);
  NOT_INTEGER:
  MOV(R0,3);
  END_IS_INTEGER:
  POP(FP);
  RETURN;
  
IS_CHAR:
  PUSH(FP);
  MOV(FP,SP);
  CMP(FPARG(1) ,IMM(1));
  JUMP_NE(ARGS_FAULT);
  MOV(R2,FPARG(2));
  CMP(IND(R2),IMM(T_CHAR));
  JUMP_NE(NOT_CHAR);
  MOV(R0,5);
  JUMP(END_IS_CHAR);
  NOT_CHAR:
  MOV(R0,3);
  END_IS_CHAR:
  POP(FP);
  RETURN;
  
IS_BOOLEAN:
  PUSH(FP);
  MOV(FP,SP);
  CMP(FPARG(1) ,IMM(1));
  JUMP_NE(ARGS_FAULT);
  MOV(R2,FPARG(2));
  CMP(IND(R2),IMM(T_BOOL));
  JUMP_NE(NOT_BOOL);
  MOV(R0,5);
  JUMP(END_IS_BOOL);
  NOT_BOOL:
  MOV(R0,3);
  END_IS_BOOL:
  POP(FP);
  RETURN;

STRING_TO_SYMBOL:
  PUSH(FP);
  MOV(FP,SP);
  CMP(FPARG(1),IMM(1));
  JUMP_NE(ARGS_FAULT);
  MOV(R1,FPARG(2));
  CMP(IND(R1),IMM(T_STRING));
  JUMP_NE(NOT_STRING_ERROR);
  MOV(R2,IMM(101));
  MOV(R3,R15);
  LOOP_SEARCH_SYMBOL:
  CMP(R2,R3);
  JUMP_GE(LOOP_SEARCH_FINISHED);
  CMP(IND(R2),IMM(T_SYMBOL));
  JUMP_NE(GET_NEXT_ELEM);
  CMP(R1,INDD(R2,1));
  JUMP_EQ(SYMBOL_FOUND);
  MOV(R7,IMM(2));
  MOV(R8,INDD(R1,1));
  MOV(R9,INDD(R2,1));
  CMP(R8,INDD(R9,1));
  JUMP_NE(GET_NEXT_ELEM);
  LOOP_CMP_CHARS:
  CMP(R8,IMM(0));
  JUMP_EQ(SYMBOL_FOUND);
  CMP(INDD(R1,R7),INDD(R9,R7));
  JUMP_NE(GET_NEXT_ELEM);
  INCR(R7);
  DECR(R8);
  JUMP(LOOP_CMP_CHARS);
  GET_NEXT_ELEM:
  INCR(R2);
  JUMP(LOOP_SEARCH_SYMBOL);
  LOOP_SEARCH_FINISHED:
  MOV(R4,ADDR(10));
  LOOP_SEARCH_LIST:
  CMP(R4,IMM(2));
  JUMP_EQ(SYMBOL_NOT_FOUND);
  MOV(R2,INDD(R4,1));
  CMP(IND(R2),IMM(T_SYMBOL));
  JUMP_NE(GET_NEXT_ELEM_LIST);
  CMP(INDD(R2,1),R1);
  JUMP_EQ(SYMBOL_FOUND);
  MOV(R7,IMM(2));
  MOV(R8,INDD(R1,1));
  MOV(R9,INDD(R2,1));
  CMP(R8,INDD(R9,1));
  JUMP_NE(GET_NEXT_ELEM_LIST);
  LOOP_CMP_CHARS_LIST:
  CMP(R8,IMM(0));
  JUMP_EQ(SYMBOL_FOUND);
  CMP(INDD(R1,R7),INDD(R9,R7));
  JUMP_NE(GET_NEXT_ELEM);
  INCR(R7);
  DECR(R8);
  JUMP(LOOP_CMP_CHARS_LIST);
  GET_NEXT_ELEM_LIST:
  MOV(R4,INDD(R4,2));
  JUMP(LOOP_SEARCH_LIST);
  SYMBOL_FOUND:
  MOV(R0,R2);
  JUMP(END_STRING_TO_SYMBOL);
  SYMBOL_NOT_FOUND:
  PUSH(IMM(2));
  CALL(MALLOC);
  DROP(IMM(1));
  MOV(IND(R0),IMM(T_SYMBOL));
  MOV(INDD(R0,1),R1);
  MOV(R7,R0);
  PUSH(ADDR(10));
  PUSH(R0);
  CALL(MAKE_SOB_PAIR);
  DROP(IMM(2));
  MOV(ADDR(10),R0);
  MOV(R0,R7);
  END_STRING_TO_SYMBOL:
  POP(FP);
  RETURN;

SYMBOL_TO_STRING:
  PUSH(FP);
  MOV(FP,SP);
  CMP(FPARG(1),IMM(1));
  JUMP_NE(ARGS_FAULT);
  MOV(R1,FPARG(2));
  CMP(IND(R1),IMM(T_SYMBOL));
  JUMP_NE(NOT_SYMBOL_ERROR);
  MOV(R0,INDD(R1,1));
  POP(FP);
  RETURN;
  
MAKE_VECTOR:
  PUSH(FP);
  MOV(FP,SP);
  CMP(FPARG(1),IMM(1));
  JUMP_NE(CHECK_OTHER);
  MOV(R1,INDD(FPARG(2),1));
  MOV(R2,IMM(0));
  JUMP(VECTOR_PUSH_ELEM);
  CHECK_OTHER:
  CMP(FPARG(1),IMM(2));
  JUMP_NE(ARGS_FAULT);
  MOV(R1,INDD(FPARG(2),1));
  MOV(R2,FPARG(3));
  VECTOR_PUSH_ELEM:
  CMP(R1,IMM(0));
  JUMP_EQ(END_LOOP_ELEM);
  PUSH(R2);
  DECR(R1);
  JUMP(VECTOR_PUSH_ELEM);
  END_LOOP_ELEM:
  PUSH(INDD(FPARG(2),1));
  CALL(MAKE_SOB_VECTOR);
  DROP(1);
  DROP(INDD(FPARG(2),1));
  POP(FP);
  RETURN;
  
VECTOR_SET:
  PUSH(FP);
  MOV(FP,SP);
  CMP(FPARG(1),IMM(3));
  JUMP_NE(ARGS_FAULT);
  MOV(R1,FPARG(2));
  CMP(IND(R1),IMM(T_VECTOR));
  JUMP_NE(NOT_VECTOR_ERROR);
  MOV(R2,FPARG(3));
  CMP(IND(R2),IMM(T_INTEGER));
  JUMP_NE(NOT_INTEGER_ERROR);
  CMP(INDD(R2,1),INDD(R1,1));
  JUMP_GE(INDEXES_MISMATCH);
  MOV(R3,FPARG(4));
  MOV(R2,INDD(R2,1));
  ADD(R2,IMM(2));
  MOV(INDD(R1,R2),R3);
  MOV(R0,IMM(T_VOID));
  POP(FP);
  RETURN;
  
MAKE_STRING:
  PUSH(FP);
  MOV(FP,SP);
  CMP(FPARG(1),IMM(1));
  JUMP_NE(CHECK_OTHER_STR);
  MOV(R1,INDD(FPARG(2),1));
  MOV(R2,IMM(48));
  JUMP(STRING_PUSH_CHAR);  
  CHECK_OTHER_STR:
  CMP(FPARG(1),IMM(2));
  JUMP_NE(ARGS_FAULT);
  MOV(R1,INDD(FPARG(2),1));
  MOV(R2,FPARG(3));
  CMP(IND(R2),IMM(T_CHAR));
  JUMP_NE(NOT_CHAR_ERROR);
  MOV(R2,INDD(R2,1));
  STRING_PUSH_CHAR:
  CMP(R1,IMM(0));
  JUMP_EQ(END_LOOP_CHAR);
  PUSH(R2);
  DECR(R1);
  JUMP(STRING_PUSH_CHAR);
  END_LOOP_CHAR:
  PUSH(INDD(FPARG(2),1));
  CALL(MAKE_SOB_STRING);
  DROP(1);
  DROP(INDD(FPARG(2),1));
  POP(FP);
  RETURN;
  
STRING_SET:
  PUSH(FP);
  MOV(FP,SP);
  CMP(FPARG(1),IMM(3));
  JUMP_NE(ARGS_FAULT);
  MOV(R1,FPARG(2));
  CMP(IND(R1),IMM(T_STRING));
  JUMP_NE(NOT_STRING_ERROR);
  MOV(R2,FPARG(3));
  CMP(IND(R2),IMM(T_INTEGER));
  JUMP_NE(NOT_INTEGER_ERROR);
  MOV(R3,FPARG(4));
  CMP(IND(R3),IMM(T_CHAR));
  JUMP_NE(NOT_CHAR_ERROR);
  CMP(INDD(R2,1),INDD(R1,1));
  JUMP_GE(INDEXES_MISMATCH);
  MOV(R3,FPARG(4));
  MOV(R2,INDD(R2,1));
  ADD(R2,IMM(2));
  MOV(INDD(R1,R2),INDD(R3,1));
  MOV(R0,IMM(T_VOID));
  POP(FP);
  RETURN;
  
VECTOR_REF:
  PUSH(FP);
  MOV(FP,SP);
  CMP(FPARG(1),IMM(2));
  JUMP_NE(ARGS_FAULT);
  MOV(R1,FPARG(2));
  CMP(IND(R1),IMM(T_VECTOR));
  JUMP_NE(NOT_VECTOR_ERROR);
  MOV(R2,FPARG(3));
  CMP(IND(R2),IMM(T_INTEGER));
  JUMP_NE(NOT_INTEGER_ERROR);
  CMP(INDD(R2,1),INDD(R1,1));
  JUMP_GE(INDEXES_MISMATCH);
  MOV(R2,INDD(R2,1));
  ADD(R2,IMM(2));
  MOV(R0,INDD(R1,R2));
  POP(FP);
  RETURN;
  
STRING_REF:
  PUSH(FP);
  MOV(FP,SP);
  CMP(FPARG(1),IMM(2));
  JUMP_NE(ARGS_FAULT);
  MOV(R1,FPARG(2));
  CMP(IND(R1),IMM(T_STRING));
  JUMP_NE(NOT_STRING_ERROR);
  MOV(R2,FPARG(3));
  CMP(IND(R2),IMM(T_INTEGER));
  JUMP_NE(NOT_INTEGER_ERROR);
  CMP(INDD(R2,1),INDD(R1,1));
  JUMP_GE(INDEXES_MISMATCH);
  MOV(R2,INDD(R2,1));
  ADD(R2,IMM(2));
  PUSH(INDD(R1,R2));
  CALL(MAKE_SOB_CHAR);
  DROP(IMM(1));
  POP(FP);
  RETURN;
  
VECTOR_LEN:
  PUSH(FP);
  MOV(FP,SP);
  CMP(FPARG(1),IMM(1));
  JUMP_NE(ARGS_FAULT);
  MOV(R1,FPARG(2));
  CMP(IND(R1),IMM(T_VECTOR));
  JUMP_NE(NOT_VECTOR_ERROR);
  PUSH(INDD(R1,1));
  CALL(MAKE_SOB_INTEGER);
  DROP(1);
  POP(FP);
  RETURN;
  
STRING_LENGTH:
  PUSH(FP);
  MOV(FP,SP);
  CMP(FPARG(1),IMM(1));
  JUMP_NE(ARGS_FAULT);
  MOV(R1,FPARG(2));
  CMP(IND(R1),IMM(T_STRING));
  JUMP_NE(NOT_STRING_ERROR);
  PUSH(INDD(R1,1));
  CALL(MAKE_SOB_INTEGER);
  DROP(1);
  POP(FP);
  RETURN;
  
IS_EQ:
  PUSH(FP);
  MOV(FP,SP);
  CMP(FPARG(1),IMM(2));
  JUMP_NE(ARGS_FAULT);
  MOV(R1,FPARG(2));
  MOV(R2,FPARG(3));
  CMP(IND(R1),IMM(T_INTEGER));
  JUMP_EQ(IS_EQ_INT);
  CMP(IND(R1),IMM(T_STRING));
  JUMP_EQ(IS_EQ_STR);
  CMP(IND(R1),IMM(T_PAIR));
  JUMP_EQ(IS_EQ_PAIR);
  CMP(IND(R1),IMM(T_CHAR));
  JUMP_EQ(IS_EQ_CHAR);
  CMP(IND(R1),IMM(T_VECTOR));
  JUMP_EQ(IS_EQ_VECTOR);
  CMP(IND(R1),IMM(T_SYMBOL));
  JUMP_EQ(IS_EQ_SYMBOL);
  CMP(IND(R1),IMM(T_CLOSURE));
  JUMP_EQ(IS_EQ_CLOSURE);
  CMP(IND(R1),IMM(T_BOOL));
  JUMP_EQ(IS_EQ_BOOL);
  CMP(IND(R1),IMM(T_NIL));
  JUMP_EQ(IS_EQ_NIL);
  JUMP(IS_EQ_VOID);
  IS_EQ_INT:
	CMP(IND(R2),IMM(T_INTEGER));
	JUMP_NE(RET_FALSE);
	CMP(INDD(R1,1),INDD(R2,1));
	JUMP_NE(RET_FALSE);
	JUMP(RET_TRUE);
  IS_EQ_STR:
  	CMP(R1,R2);
	JUMP_NE(RET_FALSE);
	JUMP(RET_TRUE);
  IS_EQ_PAIR:
  	CMP(R1,R2);
	JUMP_NE(RET_FALSE);
	JUMP(RET_TRUE);
  IS_EQ_CHAR:
  	CMP(IND(R2),IMM(T_CHAR));
	JUMP_NE(RET_FALSE);
	CMP(INDD(R1,1),INDD(R2,1));
	JUMP_NE(RET_FALSE);
	JUMP(RET_TRUE);
  IS_EQ_VECTOR:
  	CMP(R1,R2);
	JUMP_NE(RET_FALSE);
	JUMP(RET_TRUE);
  IS_EQ_SYMBOL:
  	CMP(IND(R2),IMM(T_SYMBOL));
	JUMP_NE(RET_FALSE);
	CMP(INDD(R1,1),INDD(R2,1));
	JUMP_NE(RET_FALSE);
	JUMP(RET_TRUE);	
  IS_EQ_CLOSURE:
  	CMP(IND(R2),IMM(T_CLOSURE));
	JUMP_NE(RET_FALSE);
	CMP(INDD(R1,1),INDD(R2,1));
	JUMP_NE(RET_FALSE);
	CMP(INDD(R1,2),INDD(R2,2));
	JUMP_NE(RET_FALSE);
	JUMP(RET_TRUE);
  IS_EQ_BOOL:
  	CMP(IND(R2),IMM(T_BOOL));
	JUMP_NE(RET_FALSE);
	CMP(INDD(R1,1),INDD(R2,1));
	JUMP_NE(RET_FALSE);
	JUMP(RET_TRUE);
  IS_EQ_NIL:
  	CMP(IND(R2),IMM(T_NIL));
	JUMP_EQ(RET_TRUE);
	JUMP(RET_TRUE);
  IS_EQ_VOID:
  	CMP(IND(R2),IMM(T_VOID));
	JUMP_EQ(RET_TRUE);
  RET_FALSE:
	MOV(R0,IMM(3));
	JUMP(END_IS_EQ);
  RET_TRUE:
	MOV(R0,IMM(5));
  END_IS_EQ:
  POP(FP);
  RETURN;
  
CONS:
  PUSH(FP);
  MOV(FP,SP);
  CMP(FPARG(1), IMM(2));
  JUMP_NE(ARGS_FAULT);
  PUSH(IMM(3));
  CALL(MALLOC);
  DROP(1);
  MOV(IND(R0),IMM(T_PAIR));
  MOV(INDD(R0,1),FPARG(2));
  MOV(INDD(R0,2),FPARG(3));
  POP(FP);
  RETURN;
  
IS_PAIR:
  PUSH(FP);
  MOV(FP,SP);
  CMP(FPARG(1) ,IMM(1));
  JUMP_NE(ARGS_FAULT);
  MOV(R2,FPARG(2));
  CMP(IND(R2),IMM(T_PAIR));
  JUMP_NE(NOT_PAIR);
  MOV(R0,5);
  JUMP(END_IS_PAIR);
  NOT_PAIR:
  MOV(R0,3);
  END_IS_PAIR:
  POP(FP);
  RETURN;
  
IS_PROCEDURE:
  PUSH(FP);
  MOV(FP,SP);
  CMP(FPARG(1) ,IMM(1));
  JUMP_NE(ARGS_FAULT);
  MOV(R2,FPARG(2));
  CMP(IND(R2),IMM(T_CLOSURE));
  JUMP_NE(NOT_PROCEDURE);
  MOV(R0,5);
  JUMP(END_IS_PROCEDURE);
  NOT_PROCEDURE:
  MOV(R0,3);
  END_IS_PROCEDURE:
  POP(FP);
  RETURN;
  
REMAINDER:
  PUSH(FP);
  MOV(FP,SP);
  CMP(FPARG(1),IMM(2));
  JUMP_NE(ARGS_FAULT);
  MOV(R1,FPARG(2));
  CMP(IND(R1),IMM(T_INTEGER));
  JUMP_NE(NOT_INTEGER_ERROR);
  MOV(R2,FPARG(3));
  CMP(IND(R2),IMM(T_INTEGER));
  JUMP_NE(NOT_INTEGER_ERROR);
  MOV(R1,INDD(R1,1));
  MOV(R2,INDD(R2,1));
  LOOP_REMAINDER:
  CMP(R1,R2);
  JUMP_LT(END_REMAINDER);
  SUB(R1,R2);
  JUMP(LOOP_REMAINDER);
  END_REMAINDER:
  PUSH(R1);
  CALL(MAKE_SOB_INTEGER);
  DROP(1);
  POP(FP);
  RETURN;
  
INT_TO_CHAR:
  PUSH(FP);
  MOV(FP,SP);
  CMP(FPARG(1),IMM(1));
  JUMP_NE(ARGS_FAULT);
  MOV(R1,FPARG(2));
  CMP(IND(R1),IMM(T_INTEGER));
  JUMP_NE(NOT_INTEGER_ERROR);
  MOV(R1,INDD(R1,1))
  PUSH(R1);
  CALL(MAKE_SOB_CHAR);
  DROP(IMM(1));
  POP(FP);
  RETURN;
  
BIN_EQUAL:
  PUSH(FP);
  MOV(FP,SP);
  CMP(FPARG(1),IMM(2));
  JUMP_NE(ARGS_FAULT);
  MOV(R1,FPARG(2));
  MOV(R2,FPARG(3));
  CMP(IND(R1),T_INTEGER);
  JUMP_NE(NOT_INTEGER_ERROR);
  CMP(IND(R2),T_INTEGER);
  JUMP_NE(NOT_INTEGER_ERROR);
  MOV(R1,INDD(R1,1));
  MOV(R2,INDD(R2,1));
  CMP(R1,R2);
  JUMP_EQ(SAME_NUM)
  MOV(R0,IMM(3));
  JUMP(END_BIN_EQ);
  SAME_NUM:
  MOV(R0,IMM(5));
  END_BIN_EQ:
  POP(FP);
  RETURN;
  
BIN_LESS:
  PUSH(FP);
  MOV(FP,SP);
  CMP(FPARG(1),IMM(2));
  JUMP_NE(ARGS_FAULT);
  MOV(R1,FPARG(2));
  MOV(R2,FPARG(3));
  CMP(IND(R1),T_INTEGER);
  JUMP_NE(NOT_INTEGER_ERROR);
  CMP(IND(R2),T_INTEGER);
  JUMP_NE(NOT_INTEGER_ERROR);
  MOV(R1,INDD(R1,1));
  MOV(R2,INDD(R2,1));
  CMP(R1,R2);
  JUMP_LT(IT_IS_LESS)
  MOV(R0,IMM(3));
  JUMP(END_BIN_LESS);
  IT_IS_LESS:
  MOV(R0,IMM(5));
  END_BIN_LESS:
  POP(FP);
  RETURN;
  
CHAR_TO_INT:
  PUSH(FP);
  MOV(FP,SP);
  CMP(FPARG(1),IMM(1));
  JUMP_NE(ARGS_FAULT);
  MOV(R1,FPARG(2));
  CMP(IND(R1),IMM(T_CHAR));
  JUMP_NE(NOT_CHAR_ERROR);
  PUSH(INDD(R1,1));
  CALL(MAKE_SOB_INTEGER);
  DROP(1);
  POP(FP);
  RETURN;
  
APPLY:
  PUSH(FP);
  MOV(FP, SP);
  CMP(IMM(2),FPARG(1));
  JUMP_NE(ARGS_FAULT);
  MOV(R0, FPARG(2));
  CMP(IND(R0), IMM(T_CLOSURE));
  JUMP_NE(NOT_CLOSURE_ERROR);
  MOV(R1, FPARG(3)); 					
  MOV(R2, IMM(0));
  COUNT_LIST_ELEM:
  CMP(R1,T_NIL);
  JUMP_EQ(STACK_TAIL);
  CMP(IND(R1), T_NIL);
  JUMP_EQ(STACK_TAIL);
  CMP(IND(R1), T_PAIR);
  JUMP_NE(NOT_PAIR_ERROR);
  INCR(R2);
  MOV(R1, INDD(R1, 2));
  JUMP(COUNT_LIST_ELEM); 
  STACK_TAIL:
  ADD(SP, R2); 			
  MOV(R3, FPARG(3));  	    
  PUSH_LIST_ARGS:
  CMP(IND(R3), T_NIL);	
  JUMP_EQ(COMPLETE_FRAME);
  MOV(R4, INDD(R3, 1));
  DECR(SP);	
  MOV(STACK(SP), R4);		
  MOV(R3, INDD(R3, 2));	
  JUMP(PUSH_LIST_ARGS);  
  COMPLETE_FRAME:
  ADD(SP, R2);			
  PUSH(R2);				
  MOV(R5, FPARG(2));  	
  PUSH(INDD(R5, 1));		
  PUSH(FPARG(-1));		
  ADD(R2, IMM(3)); 
  MOV(R9, SP);			   	
  SUB(R9, R2);        	
  MOV(R10, FP);	
  MOV(R8,FPARG(1));
  SUB(R10, R8);		
  SUB(R10, IMM(4));		
  MOV(FP, FPARG(-2)); 
  DECR_FRAME:
  MOV(R12, STACK(R9));	
  MOV(STACK(R10), R12);	
  INCR(R9);
  INCR(R10);				
  CMP(SP, R9);
  JUMP_NE(DECR_FRAME);
  MOV(SP, R10);			
  JUMPA(INDD(R0, 2)); 
  
CDR:
  PUSH(FP);
  MOV(FP,SP);
  CMP(FPARG(1), IMM(1));
  JUMP_NE(ARGS_FAULT);
  MOV(R2,FPARG(2));
  CMP(IND(R2),IMM(T_PAIR));
  JUMP_NE(NOT_PAIR_ERROR);
  MOV(R0,INDD(R2,2));
  POP(FP);
  RETURN;
  
CAR:
  PUSH(FP);
  MOV(FP,SP);
  CMP(FPARG(1), IMM(1));
  JUMP_NE(ARGS_FAULT);
  MOV(R2,FPARG(2));
  CMP(IND(R2),IMM(T_PAIR));
  JUMP_NE(NOT_PAIR_ERROR);
  MOV(R0,INDD(R2,1));
  POP(FP);
  RETURN;
  
IS_NULL:
  PUSH(FP);
  MOV(FP,SP);
  CMP(FPARG(1), IMM(1));
  JUMP_NE(ARGS_FAULT);
  MOV(R2,FPARG(2));
  CMP(IND(R2),IMM(T_NIL));
  JUMP_EQ(IT_IS_NULL);
  MOV(R0,IMM(3));
  JUMP(IS_NULL_END);
  IT_IS_NULL:
  MOV(R0,IMM(5));
  IS_NULL_END: 
  POP(FP);
  RETURN;
  
BIN_DIVIDE:
  PUSH(FP);
  MOV(FP,SP);
  CMP(FPARG(1),IMM(2));
  JUMP_NE(ARGS_FAULT);
  MOV(R1,FPARG(2));
  MOV(R2,FPARG(3));
  CMP(IND(R1),T_INTEGER);
  JUMP_NE(NOT_INTEGER_ERROR);
  CMP(IND(R2),T_INTEGER);
  JUMP_NE(NOT_INTEGER_ERROR);
  MOV(R1,INDD(R1,1));
  MOV(R2,INDD(R2,1));
  DIV(R1,R2);
  PUSH(R1);
  CALL(MAKE_SOB_INTEGER);
  DROP(1);
  POP(FP);
  RETURN;
  
BIN_MUL:
  PUSH(FP);
  MOV(FP,SP);
  CMP(FPARG(1),IMM(2));
  JUMP_NE(ARGS_FAULT);
  MOV(R1,FPARG(2));
  MOV(R2,FPARG(3));
  CMP(IND(R1),T_INTEGER);
  JUMP_NE(NOT_INTEGER_ERROR);
  CMP(IND(R2),T_INTEGER);
  JUMP_NE(NOT_INTEGER_ERROR);
  MOV(R1,INDD(R1,1));
  MOV(R2,INDD(R2,1));
  MUL(R1,R2);
  PUSH(R1);
  CALL(MAKE_SOB_INTEGER);
  DROP(1);
  POP(FP);
  RETURN;
  
BIN_MINUS:
  PUSH(FP);
  MOV(FP,SP);
  CMP(FPARG(1),IMM(2));
  JUMP_NE(ARGS_FAULT);
  MOV(R1,FPARG(2));
  MOV(R2,FPARG(3));
  CMP(IND(R1),T_INTEGER);
  JUMP_NE(NOT_INTEGER_ERROR);
  CMP(IND(R2),T_INTEGER);
  JUMP_NE(NOT_INTEGER_ERROR);
  MOV(R1,INDD(R1,1));
  MOV(R2,INDD(R2,1));
  SUB(R1,R2);
  PUSH(R1);
  CALL(MAKE_SOB_INTEGER);
  DROP(1);
  POP(FP);
  RETURN;